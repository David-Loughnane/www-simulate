{
  "topology": {
    "edges": [
      {
        "source": 0, 
        "target": 7, 
        "value": 1
      }, 
      {
        "source": 1, 
        "target": 7, 
        "value": 1
      }, 
      {
        "source": 2, 
        "target": 7, 
        "value": 1
      }, 
      {
        "source": 3, 
        "target": 7, 
        "value": 1
      }, 
      {
        "source": 4, 
        "target": 7, 
        "value": 1
      }, 
      {
        "source": 5, 
        "target": 7, 
        "value": 1
      }, 
      {
        "source": 6, 
        "target": 7, 
        "value": 1
      },
      {
        "source": 7, 
        "target": 8, 
        "value": 1
      },
      {
        "source": 8,
        "target": 9, 
        "value": 1
      },
      {
        "source": 8,
        "target": 10, 
        "value": 1
      },
      {
        "source": 8,
        "target": 11, 
        "value": 1
      },
      {
        "source": 8,
        "target": 12, 
        "value": 1
      },
      {
        "source": 12,
        "target": 13, 
        "value": 1
      },
      {
        "source": 13,
        "target": 14, 
        "value": 1
      }
    ], 
    "nodes": [
      {
        "group": 0, 
        "name": "0", 
        "type": "receiver",
        "ref": "A"
      }, 
      {
        "group": 1, 
        "name": "1", 
        "type": "source",
        "ref": "B"
      }, 
      {
        "group": 2, 
        "name": "2", 
        "type": "source",
        "ref": "C"
      }, 
      {
        "group": 3, 
        "name": "3", 
        "type": "source",
        "ref": "D"
      }, 
      {
        "group": 4, 
        "name": "4", 
        "type": "source",
        "ref": "E"
      }, 
      {
        "group": 5, 
        "name": "5", 
        "type": "source",
        "ref": "F"
      }, 
      {
        "group": 6, 
        "name": "6", 
        "type": "source",
        "ref": "G"
      },
      {
        "group": 7, 
        "name": "7", 
        "type": "source",
        "ref": "H"
      },
      {
        "group": 8, 
        "name": "8", 
        "type": "source",
        "ref": "I"
      },
      {
        "group": 9, 
        "name": "9", 
        "type": "source",
        "ref": "J"
      },
      {
        "group": 10, 
        "name": "10", 
        "type": "source",
        "ref": "K"
      },
      {
        "group": 11, 
        "name": "11", 
        "type": "source",
        "ref": "L"
      },
      {
        "group": 12, 
        "name": "12", 
        "type": "source",
        "ref": "M"
      },
      {
        "group": 13, 
        "name": "13", 
        "type": "source",
        "ref": "N"
      },
      {
        "group": 14, 
        "name": "14", 
        "type": "source",
        "ref": "O"
      }

    ]
  },
  "events": [
    {
      "type": "request",
      "from_node": "0",
      "data_ID": "abcdefg",
      "caption": "A creates request content (stored at M)"
    },
    {
      "type": "request_hop",
      "from_node": "0",
      "to_node": "7",
      "data_ID": "abcdefg",
      "caption": "A creates request content (stored at M)"
    },
    {
      "type": "request_hop",
      "from_node": "7",
      "to_node": "8",
      "data_ID": "abcdefg",
      "caption": "A creates request content (stored at M)"
    },
    {
      "type": "request_hop",
      "from_node": "8",
      "to_node": "12",
      "data_ID": "abcdefg",
      "caption": "A creates request content (stored at M)"
    },
    {
      "type": "server_hit",
      "node": "12",
      "data_ID": "abcdefg",
      "caption": "M serves the content back to A!"
    },
    {
      "type": "content_hop",
      "from_node": "12",
      "to_node": "8",
      "data_ID": "abcdefg",
      "caption": "M serves the content back to A!"
    },
    {
      "type": "content_hop",
      "from_node": "8",
      "to_node": "7",
      "data_ID": "abcdefg",
      "caption": "M serves the content back to A!"
    },
    {
      "type": "content_hop",
      "from_node": "7",
      "to_node": "0",
      "data_ID": "abcdefg",
      "caption": "M serves the content back to A!"
    },
    {
      "type": "request_complete",
      "node": "0",
      "data_ID": "abcdefg",
      "caption": "And A consumes it" 
    },

    {
      "type": "request",
      "from_node": "1",
      "data_ID": "abcdefg",
      "caption": "B creates request content (stored at M)"
    },
    {
      "type": "request_hop",
      "from_node": "1",
      "to_node": "7",
      "data_ID": "abcdefg",
      "caption": "B creates request content (stored at M)"
    },
    {
      "type": "request_hop",
      "from_node": "7",
      "to_node": "8",
      "data_ID": "abcdefg",
      "caption": "B creates request content (stored at M)"
    },
    {
      "type": "request_hop",
      "from_node": "8",
      "to_node": "12",
      "data_ID": "abcdefg",
      "caption": "B creates request content (stored at M)"
    },
    {
      "type": "server_hit",
      "node": "12",
      "data_ID": "abcdefg",
      "caption": "M serves the content back to B!"
    },
    {
      "type": "content_hop",
      "from_node": "12",
      "to_node": "8",
      "data_ID": "abcdefg",
      "caption": "M serves the content back to B!"
    },
    {
      "type": "content_hop",
      "from_node": "8",
      "to_node": "7",
      "data_ID": "abcdefg",
      "caption": "M serves the content back to B!"
    },
    {
      "type": "content_hop",
      "from_node": "7",
      "to_node": "1",
      "data_ID": "abcdefg",
      "caption": "M serves the content back to B!"
    },
    {
      "type": "request_complete",
      "node": "1",
      "data_ID": "abcdefg",
      "caption": "And B consumes it" 
    },

    {
      "type": "request",
      "from_node": "7",
      "data_ID": "abcdefg",
      "caption": "H request content (stored at M)"
    },
    {
      "type": "request_hop",
      "from_node": "7",
      "to_node": "8",
      "data_ID": "abcdefg",
      "caption": "H request content (stored at M)"
    },
    {
      "type": "request_hop",
      "from_node": "8",
      "to_node": "12",
      "data_ID": "abcdefg",
      "caption": "H request content (stored at M)"
    },
    {
      "type": "server_hit",
      "node": "12",
      "data_ID": "abcdefg",
      "caption": "M serves the content!"
    },
    {
      "type": "content_hop",
      "from_node": "12",
      "to_node": "8",
      "data_ID": "abcdefg",
      "caption": "M serves the content back to H"
    },
    {
      "type": "content_hop",
      "from_node": "8",
      "to_node": "7",
      "data_ID": "abcdefg",
      "caption": "M serves the content back to H"
    },
    {
      "type": "request_complete",
      "node": "7",
      "data_ID": "abcdefg",
      "caption": "And H consumes it" 
    },

    {
      "type": "wait",
      "node": "12",
      "data_ID": "abcdefg",
      "caption": "Next copy of content I receives will be cached" 
    },

    {
      "type": "request",
      "from_node": "6",
      "data_ID": "abcdefg",
      "caption": "G requests same content from M"
    },
    {
      "type": "request_hop",
      "from_node": "6",
      "to_node": "7",
      "data_ID": "abcdefg",
      "caption": "G requests same content from M"
    },
    {
      "type": "request_hop",
      "from_node": "7",
      "to_node": "8",
      "data_ID": "abcdefg",
      "caption": "G requests same content from M"
    },
    {
      "type": "request_hop",
      "from_node": "8",
      "to_node": "12",
      "data_ID": "abcdefg",
      "caption": "G requests same content from M"
    },
    {
      "type": "server_hit",
      "node": "12",
      "data_ID": "abcdefg",
      "caption": "M serves the content back to G!"
    },
    {
      "type": "content_hop",
      "from_node": "12",
      "to_node": "8",
      "data_ID": "abcdefg",
      "caption": "I serves the content to G from cache!"
    },
    {
      "type": "cache_content",
      "node": "8",
      "data_ID": "abcdefg",
      "caption": "I caches content as it passes through"
    },
    {
      "type": "content_hop",
      "from_node": "8",
      "to_node": "7",
      "data_ID": "abcdefg",
      "caption": "I continues passing content back to G"
    },
    {
      "type": "content_hop",
      "from_node": "7",
      "to_node": "6",
      "data_ID": "abcdefg",
      "caption": "I continues passing content back to G"
    },
    {
      "type": "request_complete",
      "node": "6",
      "data_ID": "abcdefg",
      "caption": "And G consumes it" 
    }

  ]
}
